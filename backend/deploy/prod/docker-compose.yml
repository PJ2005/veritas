services:
  api:
    image: veritas:${VERSION:-latest}
    ports:
      - "8000:8000"
    env_file:
      - .env.prod
    depends_on:
      - redis
    restart: unless-stopped
    environment:
      - JVM_PATH=/usr/lib/jvm/java-17-openjdk-amd64/lib/server/libjvm.so
      - ENVIRONMENT=production
    deploy:
      replicas: 2
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first

  redis:
    image: redis:6.2-alpine
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    deploy:
      placement:
        constraints:
          - node.role == manager

  prometheus:
    image: prom/prometheus:v2.43.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    deploy:
      placement:
        constraints:
          - node.role == manager

  grafana:
    image: grafana/grafana:9.5.1
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    deploy:
      placement:
        constraints:
          - node.role == manager

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
    restart: unless-stopped

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
